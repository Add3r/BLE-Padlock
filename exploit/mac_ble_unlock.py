import asyncio
from bleak import BleakScanner, BleakClient

# Replace these with your actual values
TARGET_NAME = "SmartLock"  # optional, for filtering by name
PASSCODE_UUID = "0000abcd-0000-1000-8000-00805f9b34fb"
UNLOCK_UUID = "0000beef-0000-1000-8000-00805f9b34fb"
PASSCODE_VALUE = "0000"
UNLOCK_VALUE = "01"


async def scan_devices():
    print("[*] Scanning for BLE devices (macOS)...")
    devices = await BleakScanner.discover()
    for d in devices:
        print(f"ðŸ”Ž {d.name or '[no name]'} | {d.address}")
    return devices


async def unlock_device(mac_address: str):
    print(f"[*] Connecting to {mac_address} ...")
    async with BleakClient(mac_address) as client:
        if await client.is_connected():
            print("[+] Connected successfully.")
            print("[*] Sending passcode...")
            await client.write_gatt_char(PASSCODE_UUID, PASSCODE_VALUE.encode(), response=True)
            print("[+] Passcode written.")

            print("[*] Sending unlock command...")
            await client.write_gatt_char(UNLOCK_UUID, bytearray.fromhex(UNLOCK_VALUE), response=True)
            print("[+] Unlock command sent.")
        else:
            print("[!] Failed to connect.")


async def main():
    devices = await scan_devices()
    print("\nðŸ“Œ Enter the MAC address of your padlock:")
    target_mac = input("> ").strip()
    await unlock_device(target_mac)


if __name__ == "__main__":
    asyncio.run(main())
