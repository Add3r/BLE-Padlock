import asyncio
from bleak import BleakClient
import json
import sys

# Load unlock config
with open("unlock_config.json", "r") as f:
    config = json.load(f)

address = config["mac_address"]          # MAC address of the padlock
unlock_uuid = config["unlock_uuid"]      # GATT Characteristic UUID for unlock
unlock_value = bytes.fromhex(config["unlock_value"])  # Hex string to bytes

async def unlock():
    print(f"[+] Connecting to {address}...")
    async with BleakClient(address) as client:
        if not client.is_connected:
            print("[-] Connection failed.")
            return

        print("[+] Connected. Sending unlock signal...")
        await client.write_gatt_char(unlock_uuid, unlock_value, response=True)
        print("[+] Unlock signal sent.")

if __name__ == "__main__":
    try:
        asyncio.run(unlock())
    except Exception as e:
        print(f"[!] Error: {e}")
